/**
*
*   A simple Regular Expression Analyzer
*   @version 0.2.1
*   https://github.com/foo123/regex-analyzer
*
**/(function(){var t="\\",e=/^\{\s*(\d+)\s*,?\s*(\d+)?\s*\}/,r=/^u([0-9a-fA-F]{4})/,a=/^x([0-9a-fA-F]{2})/,p={".":"MatchAnyChar","|":"MatchEither","?":"MatchZeroOrOne","*":"MatchZeroOrMore","+":"MatchOneOrMore","^":"MatchStart",$:"MatchEnd","{":"StartRepeats","}":"EndRepeats","(":"StartGroup",")":"EndGroup","[":"StartCharGroup","]":"EndCharGroup"},s={"\\":"EscapeChar","/":"/",0:"NULChar",f:"FormFeed",n:"LineFeed",r:"CarriageReturn",t:"HorizontalTab",v:"VerticalTab",b:"MatchWordBoundary",B:"MatchNonWordBoundary",s:"MatchSpaceChar",S:"MatchNonSpaceChar",w:"MatchWordChar",W:"MatchNonWordChar",d:"MatchDigitChar",D:"MatchNonDigitChar"},h=Object.prototype.toString,g=function(t,e){if(e&&(e instanceof Array||"[object Array]"==h.call(e)))for(var r=0,a=e.length;a>r;r++)t[e[r]]=1;else for(var r in e)t[r]=1;return t},n=function(t,e){t&&(t instanceof Array||"[object Array]"==h.call(t))&&(e=t[1],t=t[0]);var r,a,p=t.charCodeAt(0),s=e.charCodeAt(0);if(s==p)return[String.fromCharCode(p)];for(a=[],r=p;s>=r;++r)a.push(String.fromCharCode(r));return a},i=function(t){var e,r,a,p,s,h,l={},o={};if("Alternation"==t.type)for(a=0,p=t.part.length;p>a;a++)s=i(t.part[a]),l=g(l,s.peek),o=g(o,s.negativepeek);else if("Group"==t.type)s=i(t.part),l=g(l,s.peek),o=g(o,s.negativepeek);else if("Sequence"==t.type){for(a=0,p=t.part.length,r=t.part[a],h=a>=p||!r||"Quantifier"!=r.type||!r.flags.MatchZeroOrMore&&!r.flags.MatchZeroOrOne&&"0"!=r.flags.MatchMinimum;!h;)s=i(r.part),l=g(l,s.peek),o=g(o,s.negativepeek),a++,r=t.part[a],h=a>=p||!r||"Quantifier"!=r.type||!r.flags.MatchZeroOrMore&&!r.flags.MatchZeroOrOne&&"0"!=r.flags.MatchMinimum;p>a&&(r=t.part[a],"Special"!=r.type||"^"!=r.part&&"$"!=r.part||(r=t.part[a+1]||null),r&&"Quantifier"==r.type&&(r=r.part),r&&(s=i(r),l=g(l,s.peek),o=g(o,s.negativepeek)))}else if("CharGroup"==t.type)for(e=t.flags.NotMatch?o:l,a=0,p=t.part.length;p>a;a++)r=t.part[a],"Chars"==r.type?e=g(e,r.part):"CharRange"==r.type?e=g(e,n(r.part)):"UnicodeChar"==r.type||"HexChar"==r.type?e[r.flags.Char]=1:"Special"==r.type&&("D"==r.part?t.flags.NotMatch?l["\\d"]=1:o["\\d"]=1:"W"==r.part?t.flags.NotMatch?l["\\w"]=1:o["\\W"]=1:"S"==r.part?t.flags.NotMatch?l["\\s"]=1:o["\\s"]=1:e["\\"+r.part]=1);else"String"==t.type?l[t.part.charAt(0)]=1:"Special"!=t.type||t.flags.MatchStart||t.flags.MatchEnd?("UnicodeChar"==t.type||"HexChar"==t.type)&&(l[t.flags.Char]=1):"D"==t.part?o["\\d"]=1:"W"==t.part?o["\\W"]=1:"S"==t.part?o["\\s"]=1:l["\\"+t.part]=1;return{peek:l,negativepeek:o}},l=function(t,e){t&&this.setRegex(t,e)};l.VERSION="0.2.1",l.getCharRange=n,l.prototype={constructor:l,VERSION:l.VERSION,regex:null,groupIndex:null,pos:null,flags:null,parts:null,getCharRange:l.getCharRange,getPeekChars:function(){var t,e,r,a,s=this.flags&&this.flags.i,h=i(this.parts);for(t in h){a={},r=h[t];for(e in r)"\\d"==e?(delete r[e],a=g(a,n("0","9"))):"\\s"==e?(delete r[e],a=g(a,["\f","\n","\r","	","","Â ","\u2028","\u2029"])):"\\w"==e?(delete r[e],a=g(a,["_"].concat(n("0","9")).concat(n("a","z")).concat(n("A","Z")))):"\\."==e?(delete r[e],a[p["."]]=1):"\\"!=e.charAt(0)&&s?(a[e.toLowerCase()]=1,a[e.toUpperCase()]=1):"\\"==e.charAt(0)&&delete r[e];h[t]=g(r,a)}return h},setRegex:function(t,e){if(t){this.flags={},e=e||"/";for(var r=t.toString(),a=r.length,p=r.charAt(a-1);e!=p;)this.flags[p]=1,r=r.substr(0,a-1),a=r.length,p=r.charAt(a-1);e==r.charAt(0)&&e==r.charAt(a-1)&&(r=r.substr(1,a-2)),this.regex=r}return this},analyze:function(){var h,g,n,i="",l=[],o=[],u=!1;for(this.pos=0,this.groupIndex=0;this.pos<this.regex.length;)h=this.regex.charAt(this.pos++),u=t==h?!0:!1,u&&(h=this.regex.charAt(this.pos++)),u?"u"==h?(i.length&&(o.push({part:i,flags:{},type:"String"}),i=""),n=r.exec(this.regex.substr(this.pos-1)),this.pos+=n[0].length-1,o.push({part:n[0],flags:{Char:String.fromCharCode(parseInt(n[1],16)),Code:n[1]},type:"UnicodeChar"})):"x"==h?(i.length&&(o.push({part:i,flags:{},type:"String"}),i=""),n=a.exec(this.regex.substr(this.pos-1)),this.pos+=n[0].length-1,o.push({part:n[0],flags:{Char:String.fromCharCode(parseInt(n[1],16)),Code:n[1]},type:"HexChar"})):s[h]&&"/"!=h?(i.length&&(o.push({part:i,flags:{},type:"String"}),i=""),g={},g[s[h]]=1,o.push({part:h,flags:g,type:"Special"})):i+=h:"|"==h?(i.length&&(o.push({part:i,flags:{},type:"String"}),i=""),l.push({part:o,flags:{},type:"Sequence"}),o=[]):"["==h?(i.length&&(o.push({part:i,flags:{},type:"String"}),i=""),o.push(this.chargroup())):"("==h?(i.length&&(o.push({part:i,flags:{},type:"String"}),i=""),o.push(this.subgroup())):"{"==h?(i.length&&(o.push({part:i,flags:{},type:"String"}),i=""),n=e.exec(this.regex.substr(this.pos-1)),this.pos+=n[0].length-1,o.push({part:o.pop(),flags:{part:n[0],MatchMinimum:n[1],MatchMaximum:n[2]||"unlimited"},type:"Quantifier"})):"*"==h||"+"==h?(i.length&&(o.push({part:i,flags:{},type:"String"}),i=""),g={},g[p[h]]=1,"?"==this.regex.charAt(this.pos)?(g.isGreedy=0,this.pos++):g.isGreedy=1,o.push({part:o.pop(),flags:g,type:"Quantifier"})):"?"==h?(i.length&&(o.push({part:i,flags:{},type:"String"}),i=""),g={},g[p[h]]=1,o.push({part:o.pop(),flags:g,type:"Quantifier"})):p[h]?(i.length&&(o.push({part:i,flags:{},type:"String"}),i=""),g={},g[p[h]]=1,o.push({part:h,flags:g,type:"Special"})):i+=h;return i.length&&(o.push({part:i,flags:{},type:"String"}),i=""),l.length?(l.push({part:o,flags:{},type:"Sequence"}),o=[],g={},g[p["|"]]=1,this.parts={part:l,flags:g,type:"Alternation"}):this.parts={part:o,flags:{},type:"Sequence"},this},subgroup:function(){var h,g,n,i="",l=[],o=[],u={},f=!1,c=this.regex.substr(this.pos,2);for("?:"==c?(u.NotCaptured=1,this.pos+=2):"?="==c?(u.LookAhead=1,this.pos+=2):"?!"==c&&(u.NegativeLookAhead=1,this.pos+=2),u.GroupIndex=++this.groupIndex;this.pos<this.regex.length;)if(h=this.regex.charAt(this.pos++),f=t==h?!0:!1,f&&(h=this.regex.charAt(this.pos++)),f)"u"==h?(i.length&&(o.push({part:i,flags:{},type:"String"}),i=""),n=r.exec(this.regex.substr(this.pos-1)),this.pos+=n[0].length-1,o.push({part:n[0],flags:{Char:String.fromCharCode(parseInt(n[1],16)),Code:n[1]},type:"UnicodeChar"})):"x"==h?(i.length&&(o.push({part:i,flags:{},type:"String"}),i=""),n=a.exec(this.regex.substr(this.pos-1)),this.pos+=n[0].length-1,o.push({part:n[0],flags:{Char:String.fromCharCode(parseInt(n[1],16)),Code:n[1]},type:"HexChar"})):s[h]&&"/"!=h?(i.length&&(o.push({part:i,flags:{},type:"String"}),i=""),g={},g[s[h]]=1,o.push({part:h,flags:g,type:"Special"})):i+=h;else{if(")"==h)return i.length&&(o.push({part:i,flags:{},type:"String"}),i=""),l.length?(l.push({part:o,flags:{},type:"Sequence"}),o=[],g={},g[p["|"]]=1,{part:{part:l,flags:g,type:"Alternation"},flags:u,type:"Group"}):{part:{part:o,flags:{},type:"Sequence"},flags:u,type:"Group"};"|"==h?(i.length&&(o.push({part:i,flags:{},type:"String"}),i=""),parts.push({part:o,flags:{},type:"Sequence"}),o=[]):"["==h?(i.length&&(o.push({part:i,flags:{},type:"String"}),i=""),o.push(this.chargroup())):"("==h?(i.length&&(o.push({part:i,flags:{},type:"String"}),i=""),o.push(this.subgroup())):"{"==h?(i.length&&(o.push({part:i,flags:{},type:"String"}),i=""),n=e.exec(this.regex.substr(this.pos-1)),this.pos+=n[0].length-1,o.push({part:o.pop(),flags:{part:n[0],MatchMinimum:n[1],MatchMaximum:n[2]||"unlimited"},type:"Quantifier"})):"*"==h||"+"==h?(i.length&&(o.push({part:i,flags:{},type:"String"}),i=""),g={},g[p[h]]=1,"?"==this.regex.charAt(this.pos)?(g.isGreedy=0,this.pos++):g.isGreedy=1,o.push({part:o.pop(),flags:g,type:"Quantifier"})):"?"==h?(i.length&&(o.push({part:i,flags:{},type:"String"}),i=""),g={},g[p[h]]=1,o.push({part:o.pop(),flags:g,type:"Quantifier"})):p[h]?(i.length&&(o.push({part:i,flags:{},type:"String"}),i=""),g={},g[p[h]]=1,o.push({part:h,flags:g,type:"Special"})):i+=h}return i.length&&(o.push({part:i,flags:{},type:"String"}),i=""),l.length?(l.push({part:o,flags:{},type:"Sequence"}),o=[],g={},g[p["|"]]=1,{part:{part:l,flags:g,type:"Alternation"},flags:u,type:"Group"}):{part:{part:o,flags:{},type:"Sequence"},flags:u,type:"Group"}},chargroup:function(){var e,p,h,g,n,i,l=[],o=[],u={},f=!1,c=!1;for("^"==this.regex.charAt(this.pos)&&(u.NotMatch=1,this.pos++);this.pos<this.regex.length;)if(i=!1,h=p,p=this.regex.charAt(this.pos++),c=t==p?!0:!1,c&&(p=this.regex.charAt(this.pos++)),c&&("u"==p?(n=r.exec(this.regex.substr(this.pos-1)),this.pos+=n[0].length-1,p=String.fromCharCode(parseInt(n[1],16)),i=!0):"x"==p&&(n=a.exec(this.regex.substr(this.pos-1)),this.pos+=n[0].length-1,p=String.fromCharCode(parseInt(n[1],16)),i=!0)),f)o.length&&(l.push({part:o,flags:{},type:"Chars"}),o=[]),g[1]=p,f=!1,l.push({part:g,flags:{},type:"CharRange"});else if(c)!i&&s[p]&&"/"!=p?(o.length&&(l.push({part:o,flags:{},type:"Chars"}),o=[]),e={},e[s[p]]=1,l.push({part:p,flags:e,type:"Special"})):o.push(p);else{if("]"==p)return o.length&&(l.push({part:o,flags:{},type:"Chars"}),o=[]),{part:l,flags:u,type:"CharGroup"};"-"==p?(g=[h,""],o.pop(),f=!0):o.push(p)}return o.length&&(l.push({part:o,flags:{},type:"Chars"}),o=[]),{part:l,flags:u,type:"CharGroup"}}},"undefined"!=typeof module&&module.exports?module.exports=l:"undefined"!=typeof exports?exports=l:this.RegExAnalyzer=l}).call(this);